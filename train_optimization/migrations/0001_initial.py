# Generated by Django 5.2.6 on 2025-09-13 17:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Route",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("start_station", models.CharField(max_length=100)),
                ("end_station", models.CharField(max_length=100)),
                ("distance", models.FloatField(help_text="Distance in kilometers")),
                ("estimated_travel_time", models.DurationField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "routes",
                "indexes": [
                    models.Index(
                        fields=["start_station", "end_station"],
                        name="routes_start_s_1dd108_idx",
                    ),
                    models.Index(
                        fields=["is_active"], name="routes_is_acti_9ece4b_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Train",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("train_id", models.CharField(max_length=20, unique=True)),
                (
                    "train_type",
                    models.CharField(
                        choices=[
                            ("high_speed", "High Speed"),
                            ("express", "Express"),
                            ("local", "Local"),
                            ("freight", "Freight"),
                        ],
                        max_length=20,
                    ),
                ),
                ("capacity", models.PositiveIntegerField()),
                ("max_speed", models.FloatField(help_text="Maximum speed in km/h")),
                (
                    "fuel_efficiency",
                    models.FloatField(help_text="Fuel efficiency (km/liter)"),
                ),
                (
                    "maintenance_cost_per_km",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("is_operational", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "trains",
                "indexes": [
                    models.Index(
                        fields=["train_type"], name="trains_train_t_16749b_idx"
                    ),
                    models.Index(
                        fields=["is_operational"], name="trains_is_oper_5713a8_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("departure_time", models.DateTimeField()),
                ("arrival_time", models.DateTimeField()),
                ("passenger_load", models.PositiveIntegerField(default=0)),
                ("is_cancelled", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "route",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="train_optimization.route",
                    ),
                ),
                (
                    "train",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="train_optimization.train",
                    ),
                ),
            ],
            options={
                "db_table": "schedules",
            },
        ),
        migrations.CreateModel(
            name="PerformanceMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("fuel_consumption", "Fuel Consumption"),
                            ("on_time_performance", "On-Time Performance"),
                            ("passenger_satisfaction", "Passenger Satisfaction"),
                            ("cost_efficiency", "Cost Efficiency"),
                            ("route_utilization", "Route Utilization"),
                        ],
                        max_length=30,
                    ),
                ),
                ("value", models.FloatField()),
                ("unit", models.CharField(max_length=20)),
                ("measured_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "route",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="train_optimization.route",
                    ),
                ),
                (
                    "schedule",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="train_optimization.schedule",
                    ),
                ),
                (
                    "train",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="train_optimization.train",
                    ),
                ),
            ],
            options={
                "db_table": "performance_metrics",
            },
        ),
        migrations.CreateModel(
            name="OptimizationTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_id", models.CharField(max_length=100, unique=True)),
                (
                    "optimization_type",
                    models.CharField(
                        choices=[
                            ("schedule", "Schedule Optimization"),
                            ("route", "Route Optimization"),
                            ("fuel", "Fuel Efficiency"),
                            ("multi_objective", "Multi-Objective"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("parameters", models.JSONField(default=dict)),
                ("results", models.JSONField(default=dict)),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="optimization_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "optimization_tasks",
                "indexes": [
                    models.Index(
                        fields=["status"], name="optimizatio_status_6b6fd8_idx"
                    ),
                    models.Index(
                        fields=["optimization_type"],
                        name="optimizatio_optimiz_376437_idx",
                    ),
                    models.Index(
                        fields=["user", "created_at"],
                        name="optimizatio_user_id_bbffab_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="schedule",
            index=models.Index(
                fields=["departure_time"], name="schedules_departu_ee6507_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="schedule",
            index=models.Index(
                fields=["arrival_time"], name="schedules_arrival_42bd3a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="schedule",
            index=models.Index(
                fields=["train", "route"], name="schedules_train_i_0a88bb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="performancemetric",
            index=models.Index(
                fields=["metric_type", "measured_at"],
                name="performance_metric__5c4144_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="performancemetric",
            index=models.Index(
                fields=["train", "measured_at"], name="performance_train_i_9707a8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="performancemetric",
            index=models.Index(
                fields=["route", "measured_at"], name="performance_route_i_397571_idx"
            ),
        ),
    ]
